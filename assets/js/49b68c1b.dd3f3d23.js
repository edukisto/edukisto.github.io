"use strict";(self.webpackChunk_edukisto_tlm=self.webpackChunk_edukisto_tlm||[]).push([[604],{4550:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return h},default:function(){return f},frontMatter:function(){return p},metadata:function(){return r},toc:function(){return x}});var r=JSON.parse('{"id":"webdev/tests/example/phpunit","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","description":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430","source":"@site/docs/webdev/4-tests/example/2-phpunit.mdx","sourceDirName":"webdev/4-tests/example","slug":"/webdev/tests/example/phpunit","permalink":"/webdev/tests/example/phpunit","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_custom_props":{"number":"2"},"title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},"sidebar":"mySidebar","previous":{"title":"\u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0438\xa0\u0441\u0435\u044f\u043b\u043a\u0438","permalink":"/webdev/tests/example/dal"},"next":{"title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0435\u0431\xad\u2011\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0421\u043b\u043e\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a\xa0\u0434\u0430\u043d\u043d\u044b\u043c \u0438\xa0\u0441\u043b\u043e\u0439 \u0431\u0438\u0437\u043d\u0435\u0441\xad\u2011\u043b\u043e\u0433\u0438\u043a\u0438","permalink":"/webdev/ui/"}}'),s=t(4848),a=t(8453),o="<?php\n\nnamespace Tests\\Feature;\n\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Illuminate\\Foundation\\Testing\\WithFaker;\nuse Tests\\TestCase;\n\nclass ProductControllerTest extends TestCase\n{\n    /**\n     * A basic feature test example.\n     */\n    public function test_example(): void\n    {\n        $response = $this->get('/');\n\n        $response->assertStatus(200);\n    }\n}\n",l="<?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Product;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Tests\\TestCase;\n\nclass ProductControllerTest extends TestCase\n{\n    /**\n     * \u041e\u0442\u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432\xa0\u0411\u0414 \u043f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0438\u043c\u0435\u0440\u0430.\n     */\n    use RefreshDatabase;\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \u043f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435 \u043f\u0435\u0440\u0435\u0447\u043d\u044f \u0442\u043e\u0432\u0430\u0440\u043e\u0432.\n     */\n    public function testIndexStatus(): void\n    {\n        $response = $this->get(route('products.index'));\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\xa0\u043b\u0438 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 200.\n        $response->assertOk();\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \u043f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435 \u043f\u0435\u0440\u0435\u0447\u043d\u044f \u0442\u043e\u0432\u0430\u0440\u043e\u0432.\n     */\n    public function testIndexBody(): void\n    {\n        $response = $this->get(route('products.index'));\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\xa0\u043b\u0438 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 JSON.\n        $response->assertJson([]);\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \u043f\u0440\u0438 \u0432\u0441\u0442\u0430\u0432\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435 \u0432\xa0\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0411\u0414.\n     */\n    public function testStoreStatus(): void\n    {\n        // \u041c\u0435\u0442\u043e\u0434 factory() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u0430\u0431\u0440\u0438\u043a\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Product.\n        // \u041c\u0435\u0442\u043e\u0434 make() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0432\xa0\u041e\u0417\u0423 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 Product.\n        // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432\xa0\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e $product.\n        $product = Product::factory()->make();\n\n        $response = $this->post(route('products.store'), $product->toArray());\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\xa0\u043b\u0438 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 201.\n        $response->assertCreated();\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0444\u0430\u043a\u0442 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435 \u0432\xa0\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0411\u0414.\n     */\n    public function testStore(): void\n    {\n        $product = Product::factory()->make();\n        $data = $product->toArray();\n        $this->post(route('products.store'), $data);\n        $this->assertDatabaseHas($product->getTable(), $data);\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \u043f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435 \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440.\n     */\n    public function testShowBody(): void\n    {\n        $product = Product::factory()->make();\n        $data = $product->toArray();\n        $product->save();\n        $response = $this->get(route('products.show', [\n            'product' => $product->id,\n        ]));\n        $response->assertJson($data, false);\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0444\u0430\u043a\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435 \u0432\xa0\u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0411\u0414.\n     */\n    public function testUpdate(): void\n    {\n        // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\xa0\u041e\u0417\u0423 \u0438\xa0\u043a\u043e\u0440\u0442\u0435\u0436 \u0432\xa0\u0411\u0414.\n        $oldProduct = Product::factory()->create();\n\n        // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0435\u0449\u0451 \u043e\u0434\u0438\u043d \u043e\u0431\u044a\u0435\u043a\u0442, \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\xa0\u041e\u0417\u0423.\n        $newProduct = Product::factory()->make();\n\n        // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n        $this->patch(\n            route('products.update', [\n                'product' => $oldProduct->id,\n            ]),\n            $newProduct->toArray()\n        );\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\xa0\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436.\n        $this->assertDatabaseHas(\n            $oldProduct->getTable(),\n            $newProduct->toArray(),\n        );\n    }\n\n    /**\n     * \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u0442\u0430\u0442\u0443\u0441 \u043e\u0442\u0432\u0435\u0442\u0430 HTTP \u043f\u0440\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435 \u0432\xa0\u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0411\u0414.\n     */\n    public function testUpdateStatus(): void\n    {\n        $oldProduct = Product::factory()->create();\n        $newProduct = Product::factory()->make();\n        $response = $this->patch(\n            route('products.update', [\n                'product' => $oldProduct->id,\n            ]),\n            $newProduct->toArray()\n        );\n        $response->assertStatus(204);\n    }\n\n    // public function testDestroy(): void {}\n\n    // public function testDestroyStatus(): void {}\n}\n",i="<?php\n\nnamespace Tests\\Feature;\n\nuse App\\Models\\Product;\nuse Illuminate\\Foundation\\Testing\\RefreshDatabase;\nuse Tests\\TestCase;\n\nclass ProductTest extends TestCase\n{\n    use RefreshDatabase;\n\n    /**\n     * \u0422\u0435\u0441\u0442 \u0432\u0441\u0442\u0430\u0432\u043a\u0438 \u043a\u043e\u0440\u0442\u0435\u0436\u0430 \u0432\xa0\u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0411\u0414.\n     */\n    public function testInsert(): void\n    {\n        // \u041c\u0435\u0442\u043e\u0434 factory() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0444\u0430\u0431\u0440\u0438\u043a\u0443 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043a\u043b\u0430\u0441\u0441\u0430 Product.\n        // \u041c\u0435\u0442\u043e\u0434 create() \u0441\u043e\u0437\u0434\u0430\u0451\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043a\u043e\u0440\u0442\u0435\u0436 \u0432\xa0\u0411\u0414.\n        // \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 \u043e\u0431\u044a\u0435\u043a\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0432\xa0\u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e $manufacturer.\n        $product = Product::factory()->create();\n\n        // assertDatabaseHas() \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n        // $product->getTable() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u043c\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0411\u0414\xa0\u2014 products.\n        // $product->toArray() \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0441\u0432\u043e\u0439\u0441\u0442\u0432.\n        $this->assertDatabaseHas($product->getTable(), $product->toArray());\n    }\n\n    /**\n     * \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435.\n     */\n    public function testUpdate(): void\n    {\n        // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\xa0\u041e\u0417\u0423 \u0438\xa0\u043a\u043e\u0440\u0442\u0435\u0436 \u0432\xa0\u0411\u0414.\n        $oldProduct = Product::factory()->create();\n\n        // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0435\u0449\u0451 \u043e\u0434\u0438\u043d \u043e\u0431\u044a\u0435\u043a\u0442, \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\xa0\u041e\u0417\u0423.\n        $newProduct = Product::factory()->make();\n\n        // \u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0438\u0437 \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u0430.\n        $oldProduct->update($newProduct->toArray());\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\xa0\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436.\n        $this->assertDatabaseHas(\n            $oldProduct->getTable(),\n            $newProduct->toArray(),\n        );\n    }\n\n    /**\n     * \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0438\u0441\u0438 \u043e\xa0\u0442\u043e\u0432\u0430\u0440\u0435.\n     */\n    public function testDestroy(): void\n    {\n        // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\xa0\u041e\u0417\u0423 \u0438\xa0\u043a\u043e\u0440\u0442\u0435\u0436 \u0432\xa0\u0411\u0414.\n        $product = Product::factory()->create();\n\n        // \u0423\u0434\u0430\u043b\u044f\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436.\n        $product->delete();\n\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0443\u0434\u0430\u043b\u0451\u043d\xa0\u043b\u0438 \u043a\u043e\u0440\u0442\u0435\u0436.\n        $this->assertDatabaseMissing($product->getTable(), $product->toArray());\n    }\n}\n",u=t(7873),c=t(7227),d=t(9489);const p={sidebar_custom_props:{number:"2"},title:"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"},h="\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",m={},x=[{value:"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430",id:"\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430",level:2},{value:"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 <i>API</i>",id:"\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-api",level:2},{value:"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439",id:"\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u043c\u043e\u0434\u0435\u043b\u0435\u0439",level:2}];function b(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435",children:"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435"})}),"\n",(0,s.jsx)(n.h2,{id:"\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430",children:"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u0412\xa0\u0444\u0430\u0439\u043b\u0435 ",(0,s.jsx)(n.code,{children:"phpunit.xml"})," \u0437\u0430\u043c\u0435\u043d\u0438\u043c \u0441\u0442\u0440\u043e\u043a\u0438"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<env name="DB_CONNECTION" value="sqlite"/>\n<env name="DB_DATABASE" value=":memory:"/>\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<env name="DB_CONNECTION" value="mysql" />\n<env name="DB_DATABASE" value="laravel" />\n'})}),"\n",(0,s.jsxs)(n.h2,{id:"\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-api",children:["\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 ",(0,s.jsx)("i",{lang:"en",children:"API"})]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u041f\u043e\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 ",(0,s.jsx)("span",{children:"\u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430"})," \u0434\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430 ",(0,s.jsx)(n.code,{children:"ProductController"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"php artisan make:test --phpunit -- ProductControllerTest\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435!",type:"warning",children:(0,s.jsxs)(n.p,{children:["\u0418\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u0434\u043e\u043b\u0436\u043d\u043e \u0437\u0430\u043a\u0430\u043d\u0447\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u043b\u043e\u0432\u043e\u043c ",(0,s.jsx)(n.code,{children:"Test"}),", \u0438\u043d\u0430\u0447\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\xa0\u0443\u0447\u0442\u0451\u0442 \u044d\u0442\u043e\u0442 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439."]})}),"\n",(0,s.jsxs)(n.p,{children:["\u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d \u0444\u0430\u0439\u043b ",(0,s.jsx)(n.code,{children:"src/laravel/tests/Feature/ProductControllerTest.php"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u041e\u0442\u043a\u0440\u043e\u0435\u043c \u0432\u044b\u0448\u0435\u043d\u0430\u0437\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435."}),"\n",(0,s.jsx)(u.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b tests/Feature/ProductControllerTest.php",children:o}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u0415\u0441\u043b\u0438 \u043d\u0430\u043c \u043d\u0435\xa0\u0445\u043e\u0447\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u0438\u0437 \u0411\u0414 \u0437\u0430\u043f\u0438\u0441\u0438, \u0432\u043d\u0435\u0441\u0451\u043d\u043d\u044b\u0435 \u0442\u0443\u0434\u0430 \u043f\u0440\u0438 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438, \u0442\u043e \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u043c \u043a\xa0\u043a\u043b\u0430\u0441\u0441\u0443 \u0442\u0440\u0435\u0439\u0442, ",(0,s.jsx)(n.strong,{children:"\u043e\u0447\u0438\u0449\u0430\u044e\u0449\u0438\u0439 \u0411\u0414 (\u0438\u043c\u0435\u043d\u043d\u043e \u0411\u0414, \u0430\xa0\u043d\u0435\xa0\u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u0442\u0430\u0431\u043b\u0438\u0446\u0443!) \u043f\u043e\u0441\u043b\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"use RefreshDatabase;\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u0423\u0434\u0430\u043b\u0438\u043c \u043c\u0435\u0442\u043e\u0434 ",(0,s.jsx)(n.code,{children:"test_example"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u0438:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"php artisan route:list\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u041f\u0440\u0438\u0432\u0435\u0434\u0451\u043c \u0444\u0430\u0439\u043b \u043a\xa0\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0432\u0438\u0434\u0443:"}),"\n",(0,s.jsx)(u.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b tests/Feature/ProductTest.php",children:l}),"\n",(0,s.jsx)(n.admonition,{title:"\u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435!",type:"warning",children:(0,s.jsxs)(n.p,{children:["\u0412\u0441\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0449\u0438\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044c\u043d\u044b\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b, \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u0447\u0438\u043d\u0430\u0442\u044c\u0441\u044f \u0441\u043e \u0441\u043b\u043e\u0432\u0430 ",(0,s.jsx)(n.code,{children:"test"}),", \u0438\u043d\u0430\u0447\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435\xa0\u043d\u0430\u0439\u0434\u0451\u0442 \u0438\u0445."]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0432 \u2060",(0,s.jsx)("i",{lang:"en",children:"PHPUnit"}),":"]}),"\n",(0,s.jsxs)(d.A,{groupId:"platform",children:[(0,s.jsx)(c.A,{attributes:{className:"fa-brands fa-microsoft"},label:"Windows",value:"microsoft",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-batch",children:"vendor\\bin\\phpunit\n"})})}),(0,s.jsx)(c.A,{attributes:{className:"fa-brands fa-linux"},label:"Linux",value:"linux",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"./vendor/bin/phpunit\n"})})}),(0,s.jsx)(c.A,{attributes:{className:"fa-brands fa-apple"},label:"macOS",value:"macos",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"./vendor/bin/phpunit\n"})})})]}),"\n",(0,s.jsx)(n.p,{children:"\u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u043e"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"OK...\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435",type:"caution",children:(0,s.jsxs)(n.p,{children:["\u0415\u0441\u043b\u0438 \u0412\u044b \u043f\u0440\u0435\u0442\u0435\u043d\u0434\u0443\u0435\u0442\u0435 \u043d\u0430 \u043e\u0446\u0435\u043d\u043a\u0443 \xab\u043e\u0442\u043b\u0438\u0447\u043d\u043e\xbb, \u0441\u0430\u043c\u043e\u0441\u0442\u043e\u044f\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u0430\u0439\u0442\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442, \u0434\u043e\u0431\u0430\u0432\u0438\u0432 \u0432\xa0\u043d\u0435\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 ",(0,s.jsx)("i",{lang:"en",children:"API"}),", \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u043c\u0435\u0442\u043e\u0434\u043e\u043c ",(0,s.jsx)(n.code,{children:"destroy"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435-\u043c\u043e\u0434\u0435\u043b\u0435\u0439",children:"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u041f\u043e\u0434\u0430\u0434\u0438\u043c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 ",(0,s.jsx)("span",{children:"\u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442\u0430"})," \u0434\u043b\u044f \u043c\u043e\u0434\u0435\u043b\u0438 ",(0,s.jsx)(n.code,{children:"Product"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"php artisan make:test --phpunit -- ProductTest\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u041f\u0440\u0438\u0432\u0435\u0434\u0451\u043c \u0444\u0430\u0439\u043b \u043a\xa0\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u043c\u0443 \u0432\u0438\u0434\u0443:"}),"\n",(0,s.jsx)(u.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b tests/Feature/ProductTest.php",children:i}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u043c \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0432 \u2060",(0,s.jsx)("i",{lang:"en",children:"PHPUnit"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"\u0414\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0432\u044b\u0432\u0435\u0434\u0435\u043d\u043e"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"OK...\n"})}),"\n"]}),"\n"]}),"\n","\n"]})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}},7227:function(e,n,t){t.d(n,{A:function(){return o}});t(6540);var r=t(4164),s={tabItem:"tabItem_Ymn6"},a=t(4848);function o({children:e,hidden:n,className:t}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,t),hidden:n,children:e})}},9489:function(e,n,t){t.d(n,{A:function(){return T}});var r=t(6540),s=t(4164),a=t(4245),o=t(6347),l=t(4113),i=t(2814),u=t(5167),c=t(9900);function d(e){return r.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,r.useMemo)(()=>{const e=n??function(e){return d(e).map(({props:{value:e,label:n,attributes:t,default:r}})=>({value:e,label:n,attributes:t,default:r}))}(t);return function(e){const n=(0,u.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}function m({queryString:e=!1,groupId:n}){const t=(0,o.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,i.aZ)(s),(0,r.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,a=p(e),[o,i]=(0,r.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a})),[u,d]=m({queryString:t,groupId:s}),[x,b]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,c.Dv)(n);return[t,(0,r.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),f=(()=>{const e=u??x;return h({value:e,tabValues:a})?e:null})();(0,l.A)(()=>{f&&i(f)},[f]);return{selectedValue:o,selectValue:(0,r.useCallback)(e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),b(e)},[d,b,a]),tabValues:a}}var b=t(1062),f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},j=t(4848);function v({className:e,block:n,selectedValue:t,selectValue:r,tabValues:o}){const l=[],{blockElementScrollPositionUntilNextRender:i}=(0,a.a_)(),u=e=>{const n=e.currentTarget,s=l.indexOf(n),a=o[s].value;a!==t&&(i(n),r(a))},c=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:o.map(({value:e,label:n,attributes:r})=>(0,j.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{l.push(e)},onKeyDown:c,onClick:u,...r,className:(0,s.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:t}){const a=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===t);return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function $(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",f.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(g,{...n,...e})]})}function T(e){const n=(0,b.A)();return(0,j.jsx)($,{...e,children:d(e.children)},String(n))}}}]);