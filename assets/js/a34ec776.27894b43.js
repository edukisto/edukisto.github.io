"use strict";(self.webpackChunk_edukisto_tlm=self.webpackChunk_edukisto_tlm||[]).push([[7655],{11470:function(e,n,t){t.d(n,{A:function(){return y}});var s=t(96540),r=t(34164),a=t(23104),i=t(56347),o=t(205),l=t(57485),c=t(31682),u=t(70679);function p(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:r}}=e;return{value:n,label:t,attributes:s,default:r}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,i.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(a),(0,s.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(r.location.search);n.set(a,e),r.replace({...r.location,search:n.toString()})}),[a,r])]}function $(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,a=d(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:a}))),[c,p]=m({queryString:t,groupId:r}),[$,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,a]=(0,u.Dv)(t);return[r,(0,s.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:r}),f=(()=>{const e=c??$;return h({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),g(e)}),[p,g,a]),tabValues:a}}var g=t(92303),f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"},b=t(74848);function _(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:o}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),r=o[t].value;r!==s&&(c(n),i(r))},p=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{l.push(e)},onKeyDown:p,onClick:u,...a,className:(0,r.A)("tabs__item",f.tabItem,a?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function x(e){let{lazy:n,children:t,selectedValue:a}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===a));return e?(0,s.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function k(e){const n=$(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",f.tabList),children:[(0,b.jsx)(_,{...n,...e}),(0,b.jsx)(x,{...n,...e})]})}function y(e){const n=(0,g.A)();return(0,b.jsx)(k,{...e,children:p(e.children)},String(n))}},19365:function(e,n,t){t.d(n,{A:function(){return i}});t(96540);var s=t(34164),r={tabItem:"tabItem_Ymn6"},a=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,s.A)(r.tabItem,i),hidden:t,children:n})}},32324:function(e,n,t){t.r(n),t.d(n,{assets:function(){return g},contentTitle:function(){return $},default:function(){return _},frontMatter:function(){return m},metadata:function(){return s},toc:function(){return f}});var s=JSON.parse('{"id":"infosec/csrf/example","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f","description":"{/*","source":"@site/docs/infosec/6-csrf/example.mdx","sourceDirName":"infosec/6-csrf","slug":"/infosec/csrf/example","permalink":"/infosec/csrf/example","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_custom_props":{"number":"6"},"title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},"sidebar":"mySidebar","previous":{"title":"\u0422\u0435\u043e\u0440\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f","permalink":"/infosec/csrf/theory"},"next":{"title":"09.02.07\u2011\u0411\u0414. \u041c\u0414\u041a\xa002.01","permalink":"/swe/"}}'),r=t(74848),a=t(28453),i=t(21432),o=(t(11470),t(19365),"<?php\n\ndeclare(strict_types=1);\n\nnamespace BasicCsrfToken;\n\nclass Manager\n{\n    // \u041c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function make(): string\n    {\n        // \u041f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u043e\u043c \u041a\u0421\u0413\u041f\u0421\u0427 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c 256\xad\u2011\u0431\u0438\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n        // \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0435\u0433\u043e \u0432\xa0base64.\n        return base64_encode(random_bytes(32));\n    }\n\n    // \u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function check(string $token): bool\n    {\n        // \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438\u0437 base64.\n        $message = base64_decode($token, true);\n        if (false === $message) {\n            return false;\n        }\n        // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0445\u043e\u0442\u044f\xa0\u0431\u044b \u0434\u043b\u0438\u043d\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\n        return strlen($message) === 32;\n    }\n}\n"),l="<?php\n\ndeclare(strict_types=1);\n\nnamespace EncryptionBasedCsrfToken;\n\nclass AES256GCM\n{\n    private $aad;\n    private $iv;\n    private $ivLength;\n    private $method;\n    private $options;\n    private $tag;\n    private $tagLength;\n\n    public function __construct(\n        int $options = OPENSSL_RAW_DATA,\n        string $iv = '',\n        string &$tag = '',\n        string $aad = ''\n    ) {\n        $this->aad = $aad;\n        $this->method = 'aes-256-gcm';\n        $this->ivLength = openssl_cipher_iv_length($this->method);\n        $this->iv = openssl_random_pseudo_bytes($this->ivLength);\n        $this->options = $options;\n        $this->tag = $tag;\n        $this->tagLength = 16;\n    }\n\n    public function decrypt(string $data, string $key): string\n    {\n        $data = base64_decode($data);\n        $iv = substr($data, 0, $this->ivLength);\n        $tag = substr($data, $this->ivLength, $this->tagLength);\n        $message = substr($data, $this->ivLength + $this->tagLength);\n        return openssl_decrypt(\n            $message,\n            $this->method,\n            $key,\n            $this->options,\n            $iv,\n            $tag,\n            $this->aad\n        );\n    }\n\n    public function encrypt(string $message, string $key): string\n    {\n        $encryptedMessage = openssl_encrypt(\n            $message,\n            $this->method,\n            $key,\n            $this->options,\n            $this->iv,\n            $this->tag,\n            $this->aad,\n            $this->tagLength\n        );\n        return base64_encode($this->iv . $this->tag . $encryptedMessage);\n    }\n}\n",c="<?php\n\ndeclare(strict_types=1);\n\nnamespace EncryptionBasedCsrfToken;\n\nclass Manager\n{\n    private $cryptographer;\n\n    public function __construct($cryptographer)\n    {\n        $this->cryptographer = $cryptographer;\n    }\n\n    // \u041c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function make(int $expires, string $key): string\n    {\n        $encryptedMessage = $this->cryptographer->encrypt(\n            // \u041a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0438\u0440\u0443\u0435\u043c ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0441\xa0\u043c\u0435\u0442\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438,\n            // \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \xab|\xbb \u043a\u0430\u043a \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c.\n            session_id() . '|' . $expires,\n\n            // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447.\n            $key\n        );\n\n        // \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436 \u0432\xa0base64 (\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b, \xab+\xbb, \xab/\xbb, \xab=\xbb).\n        return base64_encode(\"$encryptedMessage|$expires\");\n    }\n\n    // \u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function check(string $token, string $key): bool\n    {\n        // \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u043d\u0435\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0440\u0442\u0435\u0436 \u0438\u0437 base64.\n        $unencTuple = base64_decode($token);\n\n        // \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043e\u0440\u0442\u0435\u0436 \u0438\xa0\u043d\u0435\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u0443\u044e \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n        list($encTuple, $unenc_expires) = explode('|', $unencTuple);\n\n        // \u0414\u0435\u0448\u0438\u0444\u0440\u0443\u0435\u043c \u043a\u043e\u0440\u0442\u0435\u0436.\n        $decTuple = $this->cryptographer->decrypt($encTuple, $key);\n\n        // \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u0438\u0437 \u0434\u0435\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0440\u0442\u0435\u0436\u0430 ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0438\xa0\u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n        list($dec_session_id, $dec_expires) = explode('|', $decTuple);\n\n        // \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0435\xa0\u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442 \u0438\u043b\u0438 \u0441\u0435\u0430\u043d\u0441 \u043e\u043a\u043e\u043d\u0447\u0435\u043d,\n        var_dump($unenc_expires, $dec_expires, time());\n        if (($unenc_expires !== $dec_expires) || (time() > $dec_expires)) {\n            // \u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u0451\u043c \u0442\u043e\u043a\u0435\u043d \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c.\n            return false;\n        }\n\n        // \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0434\u0435\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0441\xa0\u0442\u0435\u043a\u0443\u0449\u0438\u043c.\n        return $dec_session_id === session_id();\n    }\n}\n",u='<?php\n\n// \u0418\u043c\u044f \u0444\u0430\u0439\u043b\u0430 \u0441\xa0\u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u043a\u043b\u044e\u0447\u043e\u043c.\n$filename = \'.key.txt\';\n\ntry {\n    // \u0415\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442...\n    if (file_exists($filename)) {\n        throw new Exception("\u041a\u043b\u044e\u0447 \u0443\u0436\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u0432\xa0\u0444\u0430\u0439\u043b $filename.");\n    }\n\n    // \u0421\u043e\u0437\u0434\u0430\u0451\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447\u2009\u2060\u2014\u2009256\xad\u2011\u0431\u0438\u0442\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0432\u044b\u0434\u0430\u043d\u043d\u043e\u0435 \u041a\u0421\u0413\u041f\u0421\u0427.\n    // \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0432\xa0base64.\n    $key = base64_encode(random_bytes(32));\n\n    // \u0415\u0441\u043b\u0438 \u043d\u0435\xa0\u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043b\u044e\u0447 \u0432\xa0\u0444\u0430\u0439\u043b...\n    if (false === file_put_contents($filename, $key, LOCK_EX)) {\n        throw new Exception("\u041d\u0435\xa0\u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043b\u044e\u0447 \u0432\xa0\u0444\u0430\u0439\u043b $filename.");\n    }\n\n    echo "\u041a\u043b\u044e\u0447 \u0437\u0430\u043f\u0438\u0441\u0430\u043d \u0432\xa0\u0444\u0430\u0439\u043b $filename.";\n} catch (Exception $exception) {\n    echo $exception->getMessage();\n}\n',p="<?php\n\ndeclare(strict_types=1);\n\nnamespace HmacBasedCsrfToken;\n\nclass Manager\n{\n    // \u041c\u0435\u0442\u043e\u0434 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function make(int $expires, string $key): string\n    {\n        // \u0412\u044b\u0432\u043e\u0434 \u043f\u0435\u0440\u0435\u0447\u043d\u044f \u0445\u0435\u0448\xad\u2011\u0444\u0443\u043d\u043a\u0446\u0438\u0439, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f HMAC.\n        // print_r(hash_hmac_algos());\n\n        $hmac = hash_hmac(\n            // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0436\u0435\u043b\u0430\u0435\u043c\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c.\n            'sha3-256',\n\n            // \u041a\u043e\u0434\u0438\u0440\u0443\u0435\u043c ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0432\xa0base64 (\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0435 \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b, \xab+\xbb, \xab/\xbb, \xab=\xbb)\n            // \u0438\xa0\u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0438\u0440\u0443\u0435\u043c \u0441\xa0\u043c\u0435\u0442\u043a\u043e\u0439 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \xab|\xbb \u043a\u0430\u043a \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c.\n            base64_encode(session_id()) . '|' . $expires,\n\n            // \u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447.\n            $key\n        );\n        return base64_encode(\"$hmac|$expires\");\n    }\n\n    // \u041c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d\u0430.\n    function check(string $token, string $key): bool\n    {\n        // \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438\u0437 base64.\n        $message = base64_decode($token);\n\n        // \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u0438\u0437 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043c\u0435\u0442\u043a\u0443 \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\n        list(, $expires) = explode('|', $message);\n\n        // \u0415\u0441\u043b\u0438 \u0441\u0435\u0430\u043d\u0441 \u043e\u043a\u043e\u043d\u0447\u0435\u043d,\n        if (time() > $expires) {\n            // \u0442\u043e \u043f\u0440\u0438\u0437\u043d\u0430\u0451\u043c \u0442\u043e\u043a\u0435\u043d \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c.\n            return false;\n        }\n\n        // \u0421\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0435\u043c \u0442\u043e\u043a\u0435\u043d \u0441\xa0\u044d\u0442\u0430\u043b\u043e\u043d\u043e\u043c.\n        return $token === $this->make((int) $expires, $key);\n    }\n}\n",d='<!DOCTYPE html>\n<html lang="ru-luna1918">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport"\n        content="width=device-width, initial-scale=1.0">\n  <title>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f</title>\n</head>\n<body>\n  <h1>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f</h1>\n\n  <form action="login.php"\n        method="post">\n    <label>\n      \u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:\n      <input name="username"\n             value="user">\n    </label>\n\n    <label>\n      \u041f\u0430\u0440\u043e\u043b\u044c:\n      <input name="password"\n             type="password"\n             value="123">\n    </label>\n\n    <button type="submit">\u0412\u043e\u0439\u0442\u0438</button>\n  </form>\n</body>\n</html>\n',h="<?php\n\ndeclare(strict_types=1);\n\n// \u0420\u0430\u0441\u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\xa0\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a\u043e\u0439 \u043c\u0435\u0442\u043e\u0434 \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c.\n// use BasicCsrfToken\\Manager;\n// use EncryptionBasedCsrfToken\\AES256GCM;\n// use EncryptionBasedCsrfToken\\Manager;\nuse HmacBasedCsrfToken\\Manager;\n\nspl_autoload_register();\n\n// \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\xa0\u043f\u0430\u0440\u043e\u043b\u044c.\nif (\n    !isset($_POST['username']) || !isset($_POST['password'])\n    || $_POST['username'] !== 'user' || $_POST['password'] !== '123'\n) {\n    // \u0415\u0441\u043b\u0438 \u043e\u043d\u0438 \u043d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435, \u0442\u043e \u0434\u0430\u0451\u043c \u043e\u0442\u0432\u0435\u0442 HTTP \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c 401 Unauthorized.\n    http_response_code(401);\n    echo '\u0417\u0430\u043f\u0440\u043e\u0441 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.';\n    exit();\n}\n\n$lifetime = 60 * 60 * 24;\n\n// \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u0435\u0430\u043d\u0441\u043e\u0432\u0443\u044e cookie.\nif (false === session_start([\n    'cookie_domain' => '', // \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0430 \u0445\u043e\u0441\u0442\xad\u2011\u043f\u0435\u0440\u0432\u043e\u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a.\n    'cookie_httponly' => true, // \u0412\u0438\u0434\u043d\u0430 \u0442\u043e\u043b\u044c\u043a\u043e \u0432\xa0\u0437\u0430\u043f\u0440\u043e\u0441\u0430\u0445 HTTP, \u043d\u0435\xa0\u0432\xa0JavaScript.\n    'cookie_lifetime' => $lifetime, // \u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f.\n    'cookie_path' => '/', // \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u043d\u0430 \u0432\u0441\u0435 \u0432\u0435\u0431\xad\u2011\u0430\u0434\u0440\u0435\u0441\u0430 \u0445\u043e\u0441\u0442\u0430.\n    'cookie_samesite' => 'Strict', // Lax|None|Strict\n    // 'cookie_secure' => true, // \u041f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u0437\u0430\u0449\u0438\u0449\u0451\u043d\u043d\u044b\u043c \u043a\u0430\u043d\u0430\u043b\u0430\u043c \u0441\u0432\u044f\u0437\u0438.\n    // 'name' => 'PHPSESSID', // \u0418\u043c\u044f cookie; \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0440\u0430\u0432\u043d\u043e PHPSESSID.\n    // 'referer_check' => $_SERVER['SERVER_NAME'], // \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c Referer.\n    'use_cookies' => true, // \u0425\u0440\u0430\u043d\u0438\u0442\u044c ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0432\xa0cookie.\n    'use_only_cookies' => true, // \u041d\u0435\xa0\u0445\u0440\u0430\u043d\u0438\u0442\u044c ID \u0441\u0435\u0430\u043d\u0441\u0430 \u0432\xa0URI.\n    'use_strict_mode' => true, // \u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c session fixation\n    // (\u0435\u0441\u043b\u0438 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u0440\u0438\u0441\u043b\u0430\u043b \u043d\u0435\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 ID \u0441\u0435\u0430\u043d\u0441\u0430,\n    // \u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043d\u043e\u0432\u044b\u0439 ID \u0441\u0435\u0430\u043d\u0441\u0430).\n])) {\n    // \u0412\xa0\u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0434\u0430\u0451\u043c \u043e\u0442\u0432\u0435\u0442 HTTP \u0441\u043e \u0441\u0442\u0430\u0442\u0443\u0441\u043e\u043c 500 Internal Server Error.\n    http_response_code(500);\n    echo '\u041d\u0435\xa0\u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e.';\n    exit();\n}\n\n// \u0421\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u043c \u0438\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432\xa0\u0441\u0435\u0430\u043d\u0441\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.\n$_SESSION['username'] = $_POST['username'];\n\n// \u041d\u0430\u0434\u0435\u043b\u044f\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u0440\u0430\u0432\u043e\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0434\u0435\u043d\u0435\u0436\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044b.\n$_SESSION['allow_transfer'] = true;\n\n// \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 `.key.txt`.\n$key = base64_decode(trim(file_get_contents('.key.txt')));\n\n// \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d.\n// \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u043d\u0443\u0436\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0438\u0437 \u043f\u0440\u0438\u043c\u0435\u0440\u043e\u0432 \u043d\u0438\u0436\u0435.\n\n// \u0412\u044b\u0432\u043e\u0434\u0438\u043c ID \u0441\u0435\u0430\u043d\u0441\u0430.\n$sessionId = session_id();\necho \"\u0412\u044b \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u044b! ID \u0441\u0435\u0430\u043d\u0441\u0430: {$sessionId}.\";\n\nvar_dump($_SESSION);\n";const m={sidebar_custom_props:{number:"6"},title:"\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f"},$="\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f",g={},f=[{value:"\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447",id:"\u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439-\u043a\u043b\u044e\u0447",level:2},{value:"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f",id:"\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f",level:2},{value:"\u0421\u043c\u044f\u0433\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u0432",id:"\u0441\u043c\u044f\u0433\u0447\u0435\u043d\u0438\u0435-\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0435-\u0442\u043e\u043a\u0435\u043d\u043e\u0432",level:2},{value:"\u041f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0439 \u0442\u043e\u043a\u0435\u043d",id:"\u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0439-\u0442\u043e\u043a\u0435\u043d",level:3},{value:"\u0428\u0430\u0431\u043b\u043e\u043d \u0442\u043e\u043a\u0435\u043d\u0430, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0438",id:"\u0448\u0430\u0431\u043b\u043e\u043d-\u0442\u043e\u043a\u0435\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e-\u043d\u0430-\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0438",level:3},{value:"\u0428\u0430\u0431\u043b\u043e\u043d \u0442\u043e\u043a\u0435\u043d\u0430, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0430 <i>HMAC</i>",id:"\u0448\u0430\u0431\u043b\u043e\u043d-\u0442\u043e\u043a\u0435\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e-\u043d\u0430-hmac",level:3}];function b(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"\u043f\u0440\u0438\u043c\u0435\u0440-\u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f-\u0437\u0430\u0434\u0430\u043d\u0438\u044f",children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u043d\u0438\u044f"})}),"\n","\n","\n","\n",(0,r.jsx)(n.h2,{id:"\u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439-\u043a\u043b\u044e\u0447",children:"\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["\u041c\u043d\u043e\u0433\u0438\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430\u043c \u0441\u043c\u044f\u0433\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447 \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0441\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0444\u0430\u0439\u043b ",(0,r.jsx)(n.code,{children:"generate_key.php"}),", \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439:"]}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b utils/generate_key.php",children:u}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u0412\u044b\u0437\u043e\u0432\u0435\u043c \u044d\u0442\u043e\u0442 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0439:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"php utils/generate_key.php\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u0412\xa0\u043a\u043e\u0440\u043d\u0435\u0432\u043e\u043c \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u044f\u0432\u0438\u0442\u044c\u0441\u044f \u0444\u0430\u0439\u043b ",(0,r.jsx)(n.code,{children:".key.txt"})," \u0441\xa0\u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u043c \u043a\u043b\u044e\u0447\u043e\u043c."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f",children:"\u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f"}),"\n","\n",(0,r.jsx)(i.A,{language:"html",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b login-simple.html",children:d}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b login.php",children:h}),"\n",(0,r.jsx)(n.h2,{id:"\u0441\u043c\u044f\u0433\u0447\u0435\u043d\u0438\u0435-\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0435-\u0442\u043e\u043a\u0435\u043d\u043e\u0432",children:"\u0421\u043c\u044f\u0433\u0447\u0435\u043d\u0438\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0442\u043e\u043a\u0435\u043d\u043e\u0432"}),"\n",(0,r.jsx)(n.h3,{id:"\u043f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0439-\u0442\u043e\u043a\u0435\u043d",children:"\u041f\u0440\u043e\u0441\u0442\u0435\u0439\u0448\u0438\u0439 \u0442\u043e\u043a\u0435\u043d"}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b utils/basiccsrftoken/manager.php",children:o}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$manager = new Manager();\n$_SESSION['csrf_token'] = $manager->make();\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$manager = new Manager();\nif ($manager->check(...)) {\n    // ...\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"\u0448\u0430\u0431\u043b\u043e\u043d-\u0442\u043e\u043a\u0435\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e-\u043d\u0430-\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0438",children:"\u0428\u0430\u0431\u043b\u043e\u043d \u0442\u043e\u043a\u0435\u043d\u0430, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0430 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0438"}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0448\u0430\u0431\u043b\u043e\u043d\u0430 \u043d\u0430 PHP\xa07.1 \u0438\xa0OpenSSL\xa01.0.1."}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b utils/encryptionbasedcsrftoken/manager.php",children:c}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b utils/encryptionbasedcsrftoken/aes256gcm.php",children:l}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0442\u043e\u043a\u0435\u043d\u0430:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"// \u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u0438.\n$lifetime = 60 * 60 * 24;\n// \u0421\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u0441\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0439 \u043a\u043b\u044e\u0447.\n$key = base64_decode(trim(file_get_contents('.key.txt')));\n$manager = new Manager(new AES256GCM());\n$expires = time() + $lifetime;\n// \u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u043c CSRF\xad\u2011\u0442\u043e\u043a\u0435\u043d.\n$_SESSION['csrf_token'] = $manager->make($expires, $key);\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$key = base64_decode(trim(file_get_contents('.key.txt')));\n$manager = new Manager(new AES256GCM());\nif ($manager->check($token, $key)) {\n    // ...\n}\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"\u0448\u0430\u0431\u043b\u043e\u043d-\u0442\u043e\u043a\u0435\u043d\u0430-\u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e-\u043d\u0430-hmac",children:["\u0428\u0430\u0431\u043b\u043e\u043d \u0442\u043e\u043a\u0435\u043d\u0430, \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043d\u0430 ",(0,r.jsx)("i",{lang:"en",children:"HMAC"})]}),"\n",(0,r.jsx)(i.A,{language:"php",showLineNumbers:!0,title:"\u0424\u0430\u0439\u043b utils/hmacbasedcsrftoken/manager.php",children:p}),"\n",(0,r.jsx)(n.p,{children:"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\xa0\u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0442\u043e\u043a\u0435\u043d\u0430 \u0442\u0430\u043a\u0438\u0435\xa0\u0436\u0435, \u043a\u0430\u043a \u0432\xa0\u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u043d\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0443 \u043d\u0435\xa0\u043d\u0443\u0436\u0435\u043d \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u044f."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"// \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0448\u0438\u0431\u043a\u0443.\n$manager = new Manager(new AES256GCM());\n// \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0430.\n$manager = new Manager();\n"})})]})}function _(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(b,{...e})}):b(e)}}}]);